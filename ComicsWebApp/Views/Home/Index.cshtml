@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<ComicsWebApp.Data.Models.Comics>

@{
    ViewData["Title"] = "Home Page";
}

<head>
    <link rel="stylesheet" href="~/css/Index.css" asp-append-version="true" />
</head>

<div class="flex-container-center">
    <form asp-action="Index" method="get" class="search-form">
        <input type="search" name="SearchString" placeholder="Search" value="@ViewData["CurrentFilter"]" />
        <button type="submit">Search</button>
    </form>
    <div class="dropdown sort-dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            Sort @ViewData["SortedBy"]
        </button>
        <ul class="dropdown-menu" aria-labelledby="sortDropdown">
            <li><a asp-action="Index" asp-route-sortOrder="noSort" class="dropdown-item">No sort</a></li>
            <li><a asp-action="Index" asp-route-sortOrder="priceDescending" class="dropdown-item">by price descending</a></li>
            <li><a asp-action="Index" asp-route-sortOrder="priceAscending" class="dropdown-item">by price ascending</a></li>
            <li><a asp-action="Index" asp-route-sortOrder="nameAscending" class="dropdown-item">by name</a></li>
        </ul>
    </div>
</div>

@if (Model.Count > 0)
{
    <div class="container">
        <div class="row">
            @foreach (var comics in Model)
            {
                <div class="col comics-card">
                    <a href="@Url.Action("ComicsInfo", "Home", new { id = comics.Id }, null)"><img src="@Url.Action("RenderPhoto", "Home", new {id = @comics.Id })" /></a>
                    <div>@Html.ActionLink($"{@comics.Name}", "ComicsInfo", "Home", new { id = comics.Id })</div>
                    <div class="price">$@comics.Price</div>
                </div>
            }
        </div>
    </div>
    <nav>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions()
        {
            ActiveLiElementClass = "active",
            PageClasses = new[]{ "page-link"},
            LiElementClasses=new[] { "page-item" },
            UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
            LinkToNextPageFormat = "Next",
            LinkToPreviousPageFormat = "Previous",
            MaximumPageNumbersToDisplay = 5,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always
        })
    </nav>
}

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
}
